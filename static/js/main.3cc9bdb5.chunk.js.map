{"version":3,"sources":["components/index.js","hooks/useWeb3Modal.js","../../contracts/src/abis.js","../../contracts/src/addresses.js","App.js","index.js"],"names":["Header","styled","header","Body","div","Button","img","a","attrs","target","rel","button","props","hidden","INFURA_ID","NETWORK","useWeb3Modal","config","useState","provider","setProvider","autoLoaded","setAutoLoaded","autoLoad","infuraId","network","web3Modal","useMemo","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","loadWeb3Modal","useCallback","connect","newProvider","Web3Provider","logoutOfWeb3Modal","clearCachedProvider","window","location","reload","useEffect","cachedProvider","abis","erc20","erc20Abi","rapNameNft","rapNameNftv2","ownable","ownableAbi","addresses","ceaErc20","ropstenRapNameNft","rinkebyRapNameNft","mainnetRapNameNft","ropstenRapNameNftv2","rinkebyRapNameNftv2","mainnetRapNameNftv2","abi","rinkeby","address","infura","openseaURL","token","ropsten","mainnet","WalletButton","account","setAccount","rendered","setRendered","listAccounts","accounts","lookupAddress","name","substring","console","error","fetchAccount","onClick","MintLabel","rapNft","loadWeb3Model","logoutOfWeb3Model","currentToken","setCurrentToken","maxSupply","setMaxSupply","getCurrentTokenId","_currentTokenId","toString","MAX_SUPPLY","_maxSupply","style","fontSize","MintButton","signer","getSigner","contract","Contract","mintNextNft","numToMint","ether","mint","value","ethers","utils","parseEther","ButtonGroup","onMint","price","GalleryItem","tokenId","isOwner","setIsOwner","svgImage","setSvgImage","tokenURI","_b64AppData","ownerOf","_ownerId","_appDataJSON","decode","replace","_appData","JSON","parse","image","Card","CardMedia","href","alt","src","width","height","count","setCount","className","alert","MintGallery","tokenCount","setTokenCount","parseInt","length","Array","map","x","i","App","setRapNft","defaultProvider","getDefaultProvider","textAlign","margin","marginTop","marginBottom","color","client","ApolloClient","uri","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.3cc9bdb5.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  background-color: #282c34;\n  min-height: 70px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  color: white;\n`;\n\nexport const Body = styled.div`\n  align-items: center;\n  background-color: #282c34;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  font-size: calc(10px + 2vmin);\n  justify-content: center;\n  min-height: calc(100vh - 70px);\n`;\n\nexport const Image = styled.img`\n  height: 40vmin;\n  margin-bottom: 16px;\n  pointer-events: none;\n`;\n\nexport const Link = styled.a.attrs({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n})`\n  color: #61dafb;\n  margin-top: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: white;\n  border: none;\n  border-radius: 8px;\n  color: #282c34;\n  cursor: pointer;\n  font-size: 16px;\n  text-align: center;\n  text-decoration: none;\n  margin: 0px 20px;\n  padding: 12px 24px;\n\n  ${props => props.hidden && \"hidden\"} :focus {\n    border: none;\n    outline: none;\n  }\n`;\n","import { Web3Provider } from \"@ethersproject/providers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport Web3Modal from \"web3modal\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"ff20f5e62ffa435ea8bc23c49231cec8\";\n\nconst NETWORK = \"ropsten\";\n\nfunction useWeb3Modal(config = {}) {\n  const [provider, setProvider] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const { autoLoad = true, infuraId = INFURA_ID, network = NETWORK } = config;\n\n  // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n  const web3Modal = useMemo(() => {\n    return new Web3Modal({\n      network,\n      cacheProvider: true,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId,\n          },\n        },\n      },\n    });\n  }, [infuraId, network]);\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n\n  const logoutOfWeb3Modal = useCallback(\n    async function () {\n      await web3Modal.clearCachedProvider();\n      window.location.reload();\n    },\n    [web3Modal],\n  );\n\n  // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && web3Modal.cachedProvider) {\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal.cachedProvider]);\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n","import erc20Abi from \"./abis/erc20.json\";\nimport ownableAbi from \"./abis/ownable.json\";\nimport rapNameNftAbi from \"./abis/RapNameNFT.json\";\nimport rapNameNftv2Abi from \"./abis/RapNameNFTv2.json\";\n\nconst abis = {\n  erc20: erc20Abi,\n  rapNameNft: rapNameNftAbi,\n  rapNameNftv2: rapNameNftv2Abi,\n  ownable: ownableAbi,\n};\n\nexport default abis;\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  ropstenRapNameNft: \"0x4fe6c7b51360073d675ad6f7912371a8360bae0a\",\n  rinkebyRapNameNft: \"0x2318BAC067f39bC76B559b24E119d60A45624689\",\n  mainnetRapNameNft: \"0x32B8bBAEC4D6E444259e3B2191c4e04962Cb7255\",\n  ropstenRapNameNftv2: \"0x0\",\n  rinkebyRapNameNftv2: \"0xc6968268bbc7fBf8D24Ad36C6712AD07be22f611\",\n  mainnetRapNameNftv2: \"0x0\"\n\n};\n\nexport default addresses;\n","import {Contract} from \"@ethersproject/contracts\";\nimport {getDefaultProvider} from \"@ethersproject/providers\";\nimport React, {useEffect, useState} from \"react\";\nimport { ethers } from 'ethers';\n\nimport {Body, Button, Header} from \"./components\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\nimport {abis, addresses} from \"@project/contracts\";\nimport {decode} from \"base-64\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Card from \"@material-ui/core/Card\";\n\nconst Configuration = {\n  abi: abis.rapNameNftv2.abi,\n  rinkeby: {\n    network: 'rinkeby',\n    address: addresses.rinkebyRapNameNftv2,\n    infura: 'wss://rinkeby.infura.io/ws/v3/ff20f5e62ffa435ea8bc23c49231cec8',\n    openseaURL: (token) => `https://testnets.opensea.io/assets/rinkeby/${addresses.rinkebyRapNameNftv2}/${token}`\n  },\n  ropsten: {\n    network: 'ropsten',\n    address: addresses.ropstenRapNameNftv2,\n    infura: 'wss://ropsten.infura.io/ws/v3/ff20f5e62ffa435ea8bc23c49231cec8',\n    openseaURL: (token) => `https://ropsten.etherscan.io/token/${addresses.ropstenRapNameNftv2}?a=${token}`\n  },\n  mainnet: {\n    network: 'mainnet',\n    address: addresses.mainnetRapNameNftv2,\n    infura: 'wss://mainnet.infura.io/ws/v3/ff20f5e62ffa435ea8bc23c49231cec8',\n    openseaURL: (token) => `https://opensea.io/assets/${addresses.mainnetRapNameNftv2}/${token}`\n  }\n}\nconst config = Configuration.rinkeby;\n\nfunction WalletButton({ provider, loadWeb3Modal, logoutOfWeb3Modal }) {\n  const [account, setAccount] = useState(\"\");\n  const [rendered, setRendered] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchAccount() {\n      try {\n        if (!provider) {\n          return;\n        }\n\n        // Load the user's accounts.\n        const accounts = await provider.listAccounts();\n        setAccount(accounts[0]);\n\n        // Resolve the ENS name for the first account.\n        const name = await provider.lookupAddress(accounts[0]);\n\n        // Render either the ENS name or the shortened account address.\n        if (name) {\n          setRendered(name);\n        } else {\n          setRendered(account.substring(0, 6) + \"...\" + account.substring(36));\n        }\n      } catch (err) {\n        setAccount(\"\");\n        setRendered(\"\");\n        console.error(err);\n      }\n    }\n    fetchAccount();\n  }, [account, provider, setAccount, setRendered]);\n\n  return (\n    <Button\n      onClick={() => {\n        if (!provider) {\n          loadWeb3Modal();\n        } else {\n          logoutOfWeb3Modal();\n        }\n      }}\n    >\n      {rendered === \"\" && \"Connect Wallet\"}\n      {rendered !== \"\" && rendered}\n    </Button>\n  );\n}\n\nfunction MintLabel({ provider, rapNft, loadWeb3Model, logoutOfWeb3Model }) {\n  const [currentToken, setCurrentToken] = useState(\"\");\n  const [maxSupply, setMaxSupply] = useState(\"\");\n  useEffect(() => {\n    if (!rapNft || !provider) {\n      return;\n    }\n\n    (async () => {\n      const _currentTokenId = (await rapNft.getCurrentTokenId()).toString();\n      const _maxSupply = (await rapNft.MAX_SUPPLY()).toString();\n      setMaxSupply(_maxSupply);\n      setCurrentToken(_currentTokenId);\n    })();\n  }, [ provider, rapNft ]);\n\n  return (\n\n      (currentToken && maxSupply) ?\n      <p style={{fontSize: '14px'}}>{ currentToken - 1 } minted out of { maxSupply }</p> :\n          <WalletButton provider={provider} loadWeb3Modal={loadWeb3Model} logoutOfWeb3Modal={logoutOfWeb3Model} />\n  )\n}\n\nfunction MintButton({ provider }) {\n  if (!provider) {\n    return <div/>\n  }\n  const signer = provider.getSigner();\n  const contract = new Contract(config.address, abis.rapNameNftv2.abi, signer);\n\n  const mintNextNft = async (numToMint, ether) => {\n    await contract.mint(numToMint, {\n      value: ethers.utils.parseEther(ether.toString()) // adding this should fix\n    })\n  }\n  return (<div>\n      <ButtonGroup onMint={(numToMint, price) => { mintNextNft(numToMint, price) }}/>\n      </div>\n    )\n}\n\nfunction GalleryItem({ account, rapNft, tokenId }) {\n  const [isOwner, setIsOwner] = useState(false);\n  const [svgImage, setSvgImage] = useState(\"\");\n  useEffect (() => {\n    if (!rapNft) {\n      return;\n    }\n    (async () => {\n      const _b64AppData = (await rapNft.tokenURI(tokenId)).toString();\n      const _ownerId = (await rapNft.ownerOf(tokenId)).toString();\n      const _appDataJSON =  decode(_b64AppData.replace('data:application/json;base64,', ''));\n      const _appData = JSON.parse(_appDataJSON);\n      setSvgImage(_appData.image);\n      setIsOwner(_ownerId === account.toString());\n    })();\n  }, [ account, rapNft, tokenId ]);\n\n  return (\n      <Card style={{\n        'margin': '20px',\n        'background': 'white',\n        'width': '300px',\n        'height': '200px',\n        'color': 'black',\n        'overflowWrap': 'break-word',\n        'fontSize': '14px'\n      }}>\n        <CardMedia style={{'position': 'relative'}}>\n          { isOwner ? (<div style={{'position': 'absolute', 'top': '5px', 'left': '5px', 'fontSize': '24px' }}>✅️️</div>) : <div /> }\n          <a  rel=\"noreferrer\" target={\"_blank\"} href={config.openseaURL(tokenId)} style={{\n            'textDecoration': 'unset', 'position': 'absolute', 'top': '5px', 'right': '5px', 'fontSize': '24px'\n          }}>➡️️️</a>\n          <img alt={`${tokenId}`} src={ svgImage }  width={\"100%\"} height={\"100%\"}/>\n        </CardMedia>\n      </Card>\n  )\n}\n\nfunction ButtonGroup({onMint}) {\n  const [count, setCount] = useState(1);\n  const IncNum = () => {\n    if (count >= 10) {\n      alert(\"max limit reached\");\n      setCount(10);\n      return;\n    }\n    setCount(count + 1);\n  };\n  const DecNum = () => {\n    if (count > 0) setCount(count - 1);\n    else {\n      setCount(0);\n      alert(\"min limit reached\");\n    }\n  };\n  return (\n      <>\n        <div className=\"main_div\">\n          <div style={{'textAlign': 'center'}}>\n            <div>\n              <Button onClick={DecNum}>\n                <RemoveIcon />\n              </Button>\n              <Button onClick={IncNum}>\n                <AddIcon />\n              </Button>\n            </div>\n            <br />\n            <Button onClick={() => onMint(count, count * 0.02) } >Mint {count} ({count * 0.02} ETH)</Button>\n          </div>\n        </div>\n      </>\n  );\n}\n\nfunction MintGallery({ provider, rapNft }) {\n  const [tokenCount, setTokenCount] = useState(0);\n  const [account, setAccount] = useState(\"\");\n  useEffect( () => {\n    if (!rapNft || !provider) {\n      return\n    }\n    (async () => {\n      setTokenCount(parseInt((await rapNft.getCurrentTokenId()).toString(), 10));\n      const accounts = await provider.listAccounts();\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n      } else {\n        setAccount(\"\");\n      }\n    })();\n  }, [ provider, rapNft ]);\n  return <div style={{\n    'alignItems': 'center',\n    'justifyContent': 'center',\n    'textAlign': 'center',\n    'display':'flex',\n    'flexWrap': 'wrap',\n    'flexDirection': 'row',\n    'overflow': 'scroll'\n  }}>\n    {\n      tokenCount > 0 ?\n          [...Array(tokenCount - 1)].map((x, i) => {\n\n            return (\n                <GalleryItem account={account} rapNft={rapNft} tokenId={i + 1} key={i}>\n                  Hello world\n                </GalleryItem>\n            )\n    }) : <div></div>}\n  </div>\n\n}\n\nfunction App() {\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal(config.network);\n  const [rapNft, setRapNft] = useState(null);\n\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    const defaultProvider = getDefaultProvider(config.infura);\n    setRapNft(new Contract(config.address, abis.rapNameNftv2.abi, defaultProvider))\n  }, [provider]);\n\n\n  return (\n    <div>\n      <Header>\n        <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal} />\n      </Header>\n      <Body>\n        <img alt=\"cover photo\" style={{'marginLeft': 'auto', 'maxWidth': '500px', 'marginRight': 'auto'}} src={\"/coverphoto.png\"} />\n        <div style={{textAlign: 'center', margin: '10px'}}>every web3 rapper needs a web3 name\n          <div style={{fontSize: '20px', marginTop: '10px', marginBottom: '20px'}}>fully on-chain svg + metadata\n            <br/>\n            <br/>\n            <a style={{color: 'white', fontSize: '20px'}} href={\"https://twitter.com/rap_name_nft\"}>Twitter</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a style={{color: 'white', fontSize: '20px'}} href={\"https://discord.gg/QUqXQ6tq\"}>Discord</a>\n          </div>\n        </div>\n        <MintButton provider={provider} />\n        <br />\n        <hr width={'100%'} />\n        <MintLabel provider={provider} rapNft={rapNft} loadWeb3Model={loadWeb3Modal} logoutOfWeb3Model={logoutOfWeb3Modal}/>\n        <MintGallery provider={provider} rapNft={rapNft} />\n      </Body>\n    </div>\n  );\n}\n\nexport default App;\n","import \"./index.css\";\n\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\n// You should replace this url with your own and put it into a .env file\n// See all subgraphs: https://thegraph.com/explorer/\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/paulrberg/create-eth-app\",\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}